# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  - master

parameters:
  - name: myString
    type: string
    default: a string
  - name: myMultiString
    type: string
    default: default
    values:
    - default
    - ubuntu
  - name: myNumber
    type: number
    default: 2
    values:
    - 1
    - 2
    - 4
    - 8
    - 16
  - name: myBoolean
    type: boolean
    default: true
  - name: myObject
    type: object
    default:
      foo: FOO
      bar: BAR
      things:
      - one
      - two
      - three
      nested:
        one: apple
        two: pear
        count: 3
  - name: myStep
    type: step
    default:
      script: echo my step
  - name: mySteplist
    type: stepList
    default:
      - script: echo step one
      - script: echo step two
  - name: EnableXRay
    type: boolean
    default: true
  - name: EnableOTel
    type: boolean
    default: true

pool:
  vmImage: ubuntu-latest

strategy:
  matrix:
    Python27:
      python.version: '2.7'
    Python35:
      python.version: '3.5'
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'
    condition: or(eq(${{ parameters.EnableXRay }}, 'true'), eq(${{ parameters.EnableOTel }}, 'true'))

  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'
    condition: or(eq(${{ parameters.EnableXRay }}, 'true'), eq(${{ parameters.EnableOTel }}, 'true'))

  - script: |
      pip install pytest pytest-azurepipelines
      pytest
    displayName: 'pytest'
    condition: or(eq(${{ parameters.EnableXRay }}, 'true'), eq(${{ parameters.EnableOTel }}, 'true'))
